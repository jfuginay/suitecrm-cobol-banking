<?php
if (!defined('sugarEntry') || !sugarEntry) die('Not A Valid Entry Point');

$dictionary['Legacy_Bridge'] = array(
    'table' => 'legacy_bridge',
    'audited' => true,
    'unified_search' => true,
    'fields' => array(
        'id' => array(
            'name' => 'id',
            'vname' => 'LBL_ID',
            'type' => 'id',
            'required' => true,
            'reportable' => true,
        ),
        'name' => array(
            'name' => 'name',
            'vname' => 'LBL_NAME',
            'type' => 'name',
            'dbType' => 'varchar',
            'len' => '255',
            'unified_search' => true,
            'required' => true,
        ),
        'date_entered' => array(
            'name' => 'date_entered',
            'vname' => 'LBL_DATE_ENTERED',
            'type' => 'datetime',
            'enable_range_search' => true,
        ),
        'date_modified' => array(
            'name' => 'date_modified',
            'vname' => 'LBL_DATE_MODIFIED',
            'type' => 'datetime',
            'enable_range_search' => true,
        ),
        'modified_user_id' => array(
            'name' => 'modified_user_id',
            'vname' => 'LBL_MODIFIED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'reportable' => true,
            'dbType' => 'id',
        ),
        'created_by' => array(
            'name' => 'created_by',
            'vname' => 'LBL_CREATED',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'reportable' => true,
            'dbType' => 'id',
        ),
        'description' => array(
            'name' => 'description',
            'vname' => 'LBL_DESCRIPTION',
            'type' => 'text',
        ),
        'deleted' => array(
            'name' => 'deleted',
            'vname' => 'LBL_DELETED',
            'type' => 'bool',
            'default' => '0',
        ),
        'bridge_type' => array(
            'name' => 'bridge_type',
            'vname' => 'LBL_BRIDGE_TYPE',
            'type' => 'enum',
            'options' => 'legacy_bridge_type_list',
            'len' => 50,
            'required' => true,
        ),
        'source_system' => array(
            'name' => 'source_system',
            'vname' => 'LBL_SOURCE_SYSTEM',
            'type' => 'enum',
            'options' => 'legacy_source_system_list',
            'len' => 50,
        ),
        'source_format' => array(
            'name' => 'source_format',
            'vname' => 'LBL_SOURCE_FORMAT',
            'type' => 'enum',
            'options' => 'legacy_source_format_list',
            'len' => 50,
        ),
        'copybook_definition' => array(
            'name' => 'copybook_definition',
            'vname' => 'LBL_COPYBOOK_DEFINITION',
            'type' => 'text',
            'comment' => 'COBOL copybook structure definition',
        ),
        'field_mappings' => array(
            'name' => 'field_mappings',
            'vname' => 'LBL_FIELD_MAPPINGS',
            'type' => 'text',
            'comment' => 'JSON encoded field mapping configuration',
        ),
        'transformation_rules' => array(
            'name' => 'transformation_rules',
            'vname' => 'LBL_TRANSFORMATION_RULES',
            'type' => 'text',
            'comment' => 'JSON encoded transformation rules',
        ),
        'import_status' => array(
            'name' => 'import_status',
            'vname' => 'LBL_IMPORT_STATUS',
            'type' => 'enum',
            'options' => 'legacy_sync_status_list',
            'len' => 25,
            'default' => 'pending',
        ),
        'export_status' => array(
            'name' => 'export_status',
            'vname' => 'LBL_EXPORT_STATUS',
            'type' => 'enum',
            'options' => 'legacy_sync_status_list',
            'len' => 25,
            'default' => 'pending',
        ),
        'last_sync_date' => array(
            'name' => 'last_sync_date',
            'vname' => 'LBL_LAST_SYNC_DATE',
            'type' => 'datetime',
        ),
        'records_processed' => array(
            'name' => 'records_processed',
            'vname' => 'LBL_RECORDS_PROCESSED',
            'type' => 'int',
            'len' => 11,
            'default' => 0,
        ),
        'records_failed' => array(
            'name' => 'records_failed',
            'vname' => 'LBL_RECORDS_FAILED',
            'type' => 'int',
            'len' => 11,
            'default' => 0,
        ),
        'error_log' => array(
            'name' => 'error_log',
            'vname' => 'LBL_ERROR_LOG',
            'type' => 'text',
        ),
        'execution_log' => array(
            'name' => 'execution_log',
            'vname' => 'LBL_EXECUTION_LOG',
            'type' => 'text',
        ),
        'assigned_user_id' => array(
            'name' => 'assigned_user_id',
            'vname' => 'LBL_ASSIGNED_TO',
            'type' => 'assigned_user_name',
            'table' => 'users',
            'reportable' => true,
            'dbType' => 'id',
        ),
        'schedule_active' => array(
            'name' => 'schedule_active',
            'vname' => 'LBL_SCHEDULE_ACTIVE',
            'type' => 'bool',
            'default' => 0,
        ),
        'schedule_frequency' => array(
            'name' => 'schedule_frequency',
            'vname' => 'LBL_SCHEDULE_FREQUENCY',
            'type' => 'enum',
            'options' => 'scheduler_period_dom',
            'len' => 25,
        ),
        'next_run_date' => array(
            'name' => 'next_run_date',
            'vname' => 'LBL_NEXT_RUN_DATE',
            'type' => 'datetime',
        ),
    ),
    'indices' => array(
        array('name' => 'legacy_bridgespk', 'type' => 'primary', 'fields' => array('id')),
        array('name' => 'idx_bridge_type', 'type' => 'index', 'fields' => array('bridge_type')),
        array('name' => 'idx_import_status', 'type' => 'index', 'fields' => array('import_status')),
        array('name' => 'idx_export_status', 'type' => 'index', 'fields' => array('export_status')),
        array('name' => 'idx_last_sync', 'type' => 'index', 'fields' => array('last_sync_date')),
    ),
    'relationships' => array(),
    'optimistic_locking' => true,
);